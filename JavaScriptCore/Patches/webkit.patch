diff --git a/Source/JavaScriptCore/Sources.txt b/Source/JavaScriptCore/Sources.txt
index a566ad66a313..ab8c3ebd67ea 100644
--- a/Source/JavaScriptCore/Sources.txt
+++ b/Source/JavaScriptCore/Sources.txt
@@ -507,6 +507,9 @@ ftl/FTLState.cpp
 ftl/FTLThunks.cpp
 ftl/FTLValueRange.cpp
 
+// FIXME: Compile fuzzilli conditionally
+fuzzilli/Fuzzilli.cpp
+
 heap/AlignedMemoryAllocator.cpp
 heap/Allocator.cpp
 heap/BlockDirectory.cpp
diff --git a/Source/cmake/WebKitCompilerFlags.cmake b/Source/cmake/WebKitCompilerFlags.cmake
index 5766500a111a..6f64f5f8ae3c 100644
--- a/Source/cmake/WebKitCompilerFlags.cmake
+++ b/Source/cmake/WebKitCompilerFlags.cmake
@@ -316,6 +316,10 @@ if (COMPILER_IS_GCC_OR_CLANG)
                 set(SANITIZER_COMPILER_FLAGS "-fsanitize=leak ${SANITIZER_COMPILER_FLAGS}")
                 set(SANITIZER_LINK_FLAGS "-fsanitize=leak ${SANITIZER_LINK_FLAGS}")
 
+            elseif (${SANITIZER} MATCHES "fuzzilli" AND COMPILER_IS_CLANG AND NOT MSVC)
+                set(SANITIZER_COMPILER_FLAGS "-fsanitize-coverage=trace-pc-guard -DENABLE_FUZZILLI=1 ${SANITIZER_COMPILER_FLAGS}")
+                set(SANITIZER_LINK_FLAGS "-fsanitize-coverage=trace-pc-guard ${SANITIZER_LINK_FLAGS}")
+
             else ()
                 message(FATAL_ERROR "Unsupported sanitizer: ${SANITIZER}")
             endif ()
diff --git a/Tools/Scripts/webkitdirs.pm b/Tools/Scripts/webkitdirs.pm
index ddfe4e866b2f..d3af2f493972 100755
--- a/Tools/Scripts/webkitdirs.pm
+++ b/Tools/Scripts/webkitdirs.pm
@@ -740,11 +740,7 @@ sub determineCoverageIsEnabled
     return if defined $coverageIsEnabled;
     determineBaseProductDir();
 
-    if (open Coverage, "$baseProductDir/Coverage") {
-        $coverageIsEnabled = <Coverage>;
-        close Coverage;
-        chomp $coverageIsEnabled;
-    }
+    $coverageIsEnabled = readSanitizerConfiguration("Coverage");
 }
 
 sub determineFuzzilliIsEnabled
@@ -752,11 +748,7 @@ sub determineFuzzilliIsEnabled
     return if defined $fuzzilliIsEnabled;
     determineBaseProductDir();
 
-    if (open Fuzzilli, "$baseProductDir/Fuzzilli") {
-        $fuzzilliIsEnabled = <Fuzzilli>;
-        close Fuzzilli;
-        chomp $fuzzilliIsEnabled;
-    }
+    $fuzzilliIsEnabled = readSanitizerConfiguration("Fuzzilli");
 }
 
 sub determineLTOMode
@@ -2829,13 +2821,17 @@ sub generateBuildSystemFromCMakeProject
     } elsif ($config =~ /debug/i) {
         push @args, "-DCMAKE_BUILD_TYPE=Debug";
     }
-
+    # The following checks require us to be in the parent directory of the build dir
+    chdir(dirname(getcwd())) or die;
     push @args, "-DENABLE_SANITIZERS=address" if asanIsEnabled();
     push @args, "-DENABLE_SANITIZERS=thread" if tsanIsEnabled();
     push @args, "-DENABLE_SANITIZERS=undefined" if ubsanIsEnabled();
-    push @args, "-DENABLE_SANITIZERS=fuzzer" if libFuzzerIsEnabled();
+    push @args, "-DENABLE_SANITIZERS=fuzzilli" if fuzzilliIsEnabled();
+    push @args, "-DENABLE_STATIC_JSC=ON" if fuzzilliIsEnabled();
+    push @args, "-DENABLE_SANITIZERS=fuzzer" if !fuzzilliIsEnabled() && libFuzzerIsEnabled();
 
     push @args, "-DLTO_MODE=$ltoMode" if ltoMode();
+    chdir($buildPath) or die;  # Return back to the build directory
 
     if (shouldUseVcpkg()) {
         push @args, '-DCMAKE_TOOLCHAIN_FILE="' . $ENV{VCPKG_ROOT} . '\\scripts\\buildsystems\\vcpkg.cmake"';
